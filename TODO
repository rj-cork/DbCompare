DataCompare:
	- review if NLV is needed with DBMS_CRYPTO.Hash call and check if orahash is faster. Check STANDARD_HASH
	avg(length(standard_hash(column))) is 4.5x faster than dbms_crypto.hash(utl_raw.cast_to_raw(column),3) if column is varchar2(8 char)


	

DbCompare: 

	- Processing  table1 18/04/20 05:57:25
[76701 table1] GetPrimaryKey(SRC): ERROR: There is neither PK nor Unique constraint enabled for table table1
[ERROR] Error from child 29 (7424) 1:04 PM 
w takim wypadu moglby kontynuwoac z pozostalymi tabelami 


	- add pseudo partitioning. Big tables should be compared in fragments/ranges in PK, taken from stats? group by on i_FFS?
		select * from (
			select /*+ aindex_ffs(a WRH$_BG_EVENT_SUMMARY_PK) */ DBID,SNAP_ID,INSTANCE_NUMBER,EVENT_ID,CON_DBID,rownum rn from sys.WRH$_BG_EVENT_SUMMARY a order by 1,2,3,4,5
		) where rn in (round(6144961/10), round(6144961/10*2),round(6144961/10*3),round(6144961/10*4),round(6144961/10*5),round(6144961/10*6),round(6144961/10*7),round(6144961/10*8),round(6144961/10*9));
		what is faster i_FFS+sort_FS or i_FS?

		may be use just sample select:
		select num_rows from dba_tables where table_name='SOMETABLE';-- gives 6000000, so to get 50 rows: 50/6000000*100=.0008
		select * from (
			select pk_col1,pk_col2,pk_col3 from sometable sample (0.0008)
		) order by 1,2,3;

	- if there is more than 1 unique indexes choose 1) local partitioned 2) smaller

	- if DataCompare returns error like too many out of sync records it should skip this table and continue with next one

	- if there is no PK nor UK on table it could be skipped, can this be changed to all columns like in GG replication?

	- add posibility to choose dedicated/shared mode for connection

	- remap partitions? partitions --remap [db2=][schema1.][tablename1]{PART1}:[schema2.][tablename2]{PART1,PART2}

	- change dbms_crypto.hash(utl_raw.cast_to_raw(column),3) to standard_hash(column), should give 10x improvement, (check for big varchars)
		works for varchar2, number,date,timestamp. sys_op_combined_hash works ok on simple types as well.
	

	- add HTML reports
	cat ~/campaigns/release-status.html | mail -s "$(echo -e "Release Status [Green]\nContent-Type: text/html")" to.address@company.com -v
	cat ~/campaigns/release-status.html | mail -s "Release Status [Green]" -a "Content-Type: text/html" to.address@company.com
	/usr/sbin/sendmail -t to.address@company.com <__END__
	To: to.address@company.com
	Subject: test4
	Content-Type: text/html
	MIME-Version: 1.0

	This is a test
	<b>dddd</b>
	<hr>
	__END__


DataSync:

	- create script that takes output from DbCompare/DataCompare and synchronizes reported rows
